<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Convert Text to Voice</title>
    <!-- Font Raleway -->
    <link href="https://fonts.googleapis.com/css2?family=Raleway:wght@500&display=swap" rel="stylesheet">
    <!-- Font Roboto -->
    <link href="https://fonts.googleapis.com/css2?family=Roboto:ital@1&display=swap" rel="stylesheet">


    <!-- Latest compiled and minified CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css"
        integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">

    <!-- Optional theme -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css"
        integrity="sha384-rHyoN1iRsVXV4nD0JutlnGaslCJuC7uwjduW9SVrLvRYooPp2bWYgmgJQIXwl/Sp" crossorigin="anonymous">

    <!-- Latest compiled and minified JavaScript -->
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"
        integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa"
        crossorigin="anonymous"></script>
    <link href="https://fonts.googleapis.com/css?family=Oswald&display=swap" rel="stylesheet">
    <link href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet"
        integrity="sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN" crossorigin="anonymous">

    <style>
        body {
            font-family: 'Raleway', 'Roboto';
            /* background-color: whitesmoke; */
            background: url('1.jpg')no-repeat center center fixed;
            
            background-attachment: fixed;
            background-size: cover;
        }

        .position {
            margin-left: 50%;
            transform: translate(-50%, 0);
        }

        .box {
            margin-top: 50px;
            box-shadow: 2px 0px 8px -3px black;
        }

        .properties {
            margin-top: 40px;
            margin-left: 58%;
            transform: translate(-56%, 0);
        }

        p {
            float: left;
            font-size: 20px;
            margin: 20px;
            font-family: 'Oswald', sans-serif;
        }

        .btnposition {
            margin-top: 20px;
            margin-left: 64%;
            transform: translate(-64%, 0);
        }
        .wave{
            background-color: aquamarine !important;
        }

            
        
    </style>

</head>

<body>
    <div class="container">
        <div class="row">

            <div class="col-12">
                <span class="text-center" id="hide">
                    <h1 class=" m-5" style="color: aliceblue; font-weight: 600;">Text to Audio Soundwave</h1>
                    <br> <br>
                    <div class="position"  hidden> 
                        <span class="text-center" style="font-size: 20px;">Select Voice:</span> <select class="center text-white"
                            name="" id="voiceList"></select>
                    </div>
                    <br>
                    <form action="/generate" method="POST">
                        <h3 class="text-center text-white" style="color: aliceblue; font-weight: 600;">Baby's Name</h3>


                        <input style="width: 300px;height: 40px;" type="text" id="inputText"
                            placeholder="Baby's Name" name="msg">


                        <br>
                        <br>
                        <button class="btn btn-success " id="btnSpeak">Generate</button>
                    </form>
                </span>
            </div>



            <!-- Create a div where the audio waves will be shown -->
            <div class="box" id="audio-spectrum" class="wave"></div>

            <!-- Create action buttons -->

            <div class="btnposition">


                <button style="font-size: 20px;" type="button" id="btn-play" disabled="disabled"> <i class="fa fa-play"
                        style="font-size: 25px;"> </i> Play</button>
                <button style="font-size: 20px;" type="button" id="btn-pause" disabled="disabled"> <i
                        class="fa fa-pause" style="font-size: 25px;"> </i> Pause</button>
                <button style="font-size: 20px;" type="button" id="btn-stop" disabled="disabled"> <i class="fa fa-stop"
                        style="font-size: 25px;"> </i> Stop</button>


            </div>

            <div class="col-12">
                <div class="properties">
                    <p class="text-center" style="color: aliceblue;">May,01,2020</p>
                    <p style="color: aliceblue;">Time</p>
                    <p style="color: aliceblue;" >Weight</p>
                    <p style="color: aliceblue;">Height</p>
                </div>
            </div>



        </div>
    </div>
    <!-- Load the wavesurferscript , in this case from a CDN -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/wavesurfer.js/1.3.7/wavesurfer.min.js"></script>

    <script>

        var toSpeak;
        // Store the 3 buttons in some object
        var buttons = {
            play: document.getElementById("btn-play"),
            pause: document.getElementById("btn-pause"),
            stop: document.getElementById("btn-stop")
        };

        // Create an instance of wave surfer with its configuration
        var Spectrum = WaveSurfer.create({
            container: '#audio-spectrum',
            waveColor: "#fff",
            progressColor: "#4b6cb7",
            barHeight: 3

        });

        // Handle Play button
        buttons.play.addEventListener("click", function () {
            Spectrum.play();

            toSpeak = new SpeechSynthesisUtterance(inputText.value); // speache request and info

            var selectedVoiceName = "Microsoft David Desktop - English (United States)"
            //voiceList.selectedOptions[0].getAttribute('data-name'); // set the selsected language
            voices.forEach((voice) => {
                if (voice.name === selectedVoiceName) {// find the selected one 
                    toSpeak.voice = voice;
                }
            });
             tts.speak(toSpeak); 

            // Enable/Disable respectively buttons
            buttons.stop.disabled = false;
            buttons.pause.disabled = false;
            buttons.play.disabled = true;

        }, false);

        // Handle Pause button
        buttons.pause.addEventListener("click", function () {
            Spectrum.pause();

            // Enable/Disable respectively buttons
            buttons.pause.disabled = true;
            buttons.play.disabled = false;
        }, false);


        // Handle Stop button
        buttons.stop.addEventListener("click", function () {
            Spectrum.stop();

            // Enable/Disable respectively buttons
            buttons.pause.disabled = true;
            buttons.play.disabled = false;
            buttons.stop.disabled = true;
        }, false);


        // Add a listener to enable the play button once it's ready
        Spectrum.on('ready', function () {
            buttons.play.disabled = false;
        });

        // If you want a responsive mode (so when the user resizes the window)
        // the spectrum will be still playable
        window.addEventListener("resize", function () {
            // Get the current progress according to the cursor position
            var currentProgress = Spectrum.getCurrentTime() / Spectrum.getDuration();

            // Reset graph
            Spectrum.empty();
            Spectrum.drawBuffer();
            // Set original position
            Spectrum.seekTo(currentProgress);

            // Enable/Disable respectively buttons
            buttons.pause.disabled = true;
            buttons.play.disabled = false;
            buttons.stop.disabled = false;

        }, false);


        var voiceList = document.querySelector('#voiceList');
        var inputText = document.querySelector('#inputText');
        var btnSpeak = document.querySelector('#btnSpeak');
        var tts = window.speechSynthesis; // get windows speech API
        var voices = [];   // list of all supported voice store here

        getVoices();
        if (speechSynthesis !== undefined) {
            speechSynthesis.onvoiceschanged = getVoices;
        }

        // button click

        btnSpeak.addEventListener('click', () => {

            var toSpeak = new SpeechSynthesisUtterance(inputText.value); // speache request and info
            var selectedVoiceName = "Microsoft David Desktop"
            //voiceList.selectedOptions[0].getAttribute('data-name'); // set the selsected language
            // console.log(selectedVoiceName);
            voices.forEach((voice) => {
                if (voice.name === selectedVoiceName) {// find the selected one 
                    toSpeak.voice = voice;
                }
            });

            // tts.speak(toSpeak); // speake the text 
            // $("#hide").hide();

        })


        function getVoices() {
            voices = tts.getVoices();
            voiceList.innerHTML = '';
            voices.forEach((voice) => {
                var listItem = document.createElement('option');
                listItem.textContent = voice.name;
                listItem.setAttribute('data-lang', voice.lang);
                listItem.setAttribute('data-name', voice.name);
                voiceList.appendChild(listItem); // push ecahc voice to the selece field
            })
            voiceList.selectedIndex = 0;
        }

        Spectrum.load('FileName.mp3')
    </script>
</body>

</html>